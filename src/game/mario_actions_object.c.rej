diff a/src/game/mario_actions_object.c b/src/game/mario_actions_object.c	(rejected hunks)
@@ -28,8 +28,13 @@ s32 mario_update_punch_sequence(struct MarioState *m) {
     u32 endAction, crouchEndAction;
     s32 animFrame;
 
+
+
+
+
+
     if (m->action & ACT_FLAG_MOVING) {
-        endAction = ACT_WALKING, crouchEndAction = ACT_CROUCH_SLIDE;
+        endAction = ACT_WALKING, crouchEndAction = ACT_DIVE_SLIDE;
     } else {
         endAction = ACT_IDLE, crouchEndAction = ACT_CROUCHING;
     }
@@ -114,6 +119,7 @@ s32 mario_update_punch_sequence(struct MarioState *m) {
             play_mario_action_sound(m, SOUND_MARIO_PUNCH_HOO, 1);
             animFrame = set_mario_animation(m, MARIO_ANIM_GROUND_KICK);
             if (animFrame == 0) {
+				
                 m->marioBodyState->punchState = (2 << 6) | 6;
             }
 
@@ -128,22 +134,49 @@ s32 mario_update_punch_sequence(struct MarioState *m) {
 
         case 9:
             play_mario_action_sound(m, SOUND_MARIO_PUNCH_HOO, 1);
-            set_mario_animation(m, MARIO_ANIM_BREAKDANCE);
-            animFrame = m->marioObj->header.gfx.animInfo.animFrame;
+           // set_mario_animation(m, MARIO_ANIM_FORWARD_SPINNING);
+			//animFrame = m->marioObj->header.gfx.unk38.animFrame;
+			
+			set_mario_action(m, ACT_SPINDASH, 0);
+
+
+		
+				
+
+			if (!(m->input & INPUT_Z_DOWN)) {
+			
+				//set_mario_action(m, crouchEndAction, 0);
+				//set_mario_action(m, ACT_DIVE_SLIDE, 0);
+				//mario_set_forward_vel(m, Accel);
+			}
+			else
+			{
+				//Accel += 50.0f;
+				//play_mario_sound(m, SOUND_ACTION_TERRAIN_JUMP, 1);
+			}
+			//mario_set_forward_vel(m, 100.0f);
 
             if (animFrame >= 2 && animFrame < 8) {
-                m->flags |= MARIO_TRIPPING;
+                //m->flags |= MARIO_TRIPPING;
             }
 
             if (is_anim_at_end(m)) {
-                set_mario_action(m, crouchEndAction, 0);
+			
+
+
+					//set_mario_action(m, crouchEndAction, 0);
+				
+				
             }
-            break;
+            
     }
 
     return FALSE;
 }
 
+
+
+
 s32 act_punching(struct MarioState *m) {
     if (m->input & INPUT_UNKNOWN_10) {
         return drop_and_set_mario_action(m, ACT_SHOCKWAVE_BOUNCE, 0);
@@ -264,9 +297,7 @@ s32 act_throwing(struct MarioState *m) {
         mario_throw_held_object(m);
         play_sound_if_no_flag(m, SOUND_MARIO_WAH2, MARIO_MARIO_SOUND_PLAYED);
         play_sound_if_no_flag(m, SOUND_ACTION_THROW, MARIO_ACTION_SOUND_PLAYED);
-#ifdef VERSION_SH
-        queue_rumble_data(3, 50);
-#endif
+
     }
 
     animated_stationary_ground_step(m, MARIO_ANIM_GROUND_THROW, ACT_IDLE);
@@ -286,9 +317,7 @@ s32 act_heavy_throw(struct MarioState *m) {
         mario_drop_held_object(m);
         play_sound_if_no_flag(m, SOUND_MARIO_WAH2, MARIO_MARIO_SOUND_PLAYED);
         play_sound_if_no_flag(m, SOUND_ACTION_THROW, MARIO_ACTION_SOUND_PLAYED);
-#ifdef VERSION_SH
-        queue_rumble_data(3, 50);
-#endif
+
     }
 
     animated_stationary_ground_step(m, MARIO_ANIM_HEAVY_THROW, ACT_IDLE);
@@ -318,9 +347,7 @@ s32 act_picking_up_bowser(struct MarioState *m) {
         m->angleVel[1] = 0;
         m->marioBodyState->grabPos = GRAB_POS_BOWSER;
         mario_grab_used_object(m);
-#ifdef VERSION_SH
-        queue_rumble_data(5, 80);
-#endif
+
         play_sound(SOUND_MARIO_HRMM, m->marioObj->header.gfx.cameraToObject);
     }
 
@@ -396,15 +423,11 @@ s32 act_holding_bowser(struct MarioState *m) {
 
     // play sound on overflow
     if (m->angleVel[1] <= -0x100 && spin < m->faceAngle[1]) {
-#ifdef VERSION_SH
-        queue_rumble_data(4, 20);
-#endif
+
         play_sound(SOUND_OBJ_BOWSER_SPINNING, m->marioObj->header.gfx.cameraToObject);
     }
     if (m->angleVel[1] >= 0x100 && spin > m->faceAngle[1]) {
-#ifdef VERSION_SH
-        queue_rumble_data(4, 20);
-#endif
+
         play_sound(SOUND_OBJ_BOWSER_SPINNING, m->marioObj->header.gfx.cameraToObject);
     }
 
@@ -478,6 +501,7 @@ s32 mario_execute_object_action(struct MarioState *m) {
         case ACT_PICKING_UP_BOWSER:  cancel = act_picking_up_bowser(m);  break;
         case ACT_HOLDING_BOWSER:     cancel = act_holding_bowser(m);     break;
         case ACT_RELEASING_BOWSER:   cancel = act_releasing_bowser(m);   break;
+		case ACT_SPINDASH:           cancel = act_spindash(m);			 break;
     }
     /* clang-format on */
 
